{"version":3,"sources":["types/types.js","actions/auth.js","actions/dashboard.js","components/dashboard/Online.js","components/dashboard/All.js","components/dashboard/Aside.js","components/dashboard/MessageReceived.js","components/dashboard/MessageSent.js","components/dashboard/Chat.js","components/dashboard/PrivateChat.js","context/SocketProvider.js","actions/stats.js","components/dashboard/DashboardScreen.js","components/statistics/StatisticsScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/dashboardReducer.js","reducers/statsReducer.js","store/store.js","App.js","index.js"],"names":["types","login","data","type","payload","newUser","checkingFinish","addMessages","addChatMessages","selectUser","Online","dispatch","useDispatch","uid","useSelector","state","auth","selectedUser","dashboard","users","className","onClick","name","color","size","style","marginRight","fontSize","height","map","user","id","All","allUsers","Aside","useState","setState","userLeaves","useCallback","find","useEffect","DropdownButton","title","variant","Dropdown","ItemText","Item","as","localStorage","removeItem","to","ButtonGroup","aria-label","width","MessageReceived","text","date","motion","div","animate","scale","paddingLeft","paddingRight","background","marginLeft","maxWidth","navigator","clipboard","writeText","then","Swal","fire","MessageSent","backgroundColor","Chat","sendMessage","textRef","useRef","messages","setRef","node","scrollIntoView","behavior","src","alt","length","Spinner","animation","role","message","index","lastMessage","_id","ref","padding","onSubmit","e","preventDefault","current","value","placeholder","autoComplete","propType","PropTypes","func","isRequired","PrivateChat","sendPrivateMessage","chatMessages","axios","get","process","headers","getItem","messagesChat","recipient","SocketContext","React","createContext","SocketProvider","children","socket","setSocket","dateDayJS","dayjs","Date","newHour","$H","$m","toString","$D","$W","$y","emit","newSocket","io","query","close","on","off","addUsers","addAllUsers","setStats","values","Provider","DashboardScreen","useContext","Helmet","content","Container","fluid","Row","Col","md","StatisticsScreen","countMessages","stats","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","LoginScreen","emailRef","passwordRef","error","setError","charSet","Form","email","password","test","a","post","ok","setItem","token","msg","startLogin","Group","Control","isInvalid","Button","RegisterScreen","nameRef","position","icon","showConfirmButton","timer","startRegister","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","exact","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"yPAAaA,EACc,2BADdA,EAEE,aAFFA,EAGG,cAHHA,EAIA,gBAJAA,EAMI,yBANJA,EAOQ,8BAPRA,EAQC,sBARDA,EASO,kBATPA,EAUG,wBAVHA,EAWI,qCAXJA,EAaE,mBCYTC,EAAQ,SAAEC,GAAF,MAAa,CACvBC,KAAMH,EACNI,QAASF,IAyDPG,EAAU,iBAAO,CAAEF,KAAMH,IAEzBM,EAAiB,iBAAO,CAAEH,KAAMH,I,+ECnFzBO,EAAc,SAAEH,GAAF,MAAgB,CACvCD,KAAMH,EACNI,YAGSI,EAAkB,SAACJ,GAAD,MAAc,CACzCD,KAAMH,EACNI,YAQSK,EAAa,SAAEL,GAAF,MAAgB,CACtCD,KAAMH,EACNI,Y,OCfSM,EAAS,WAElB,IAAMC,EAAWC,cACTC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCH,IACAI,EAAiBH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAA5CD,aACAE,EAAUL,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAArCC,MAER,OACI,qCACI,oBAAIC,UAAU,iBAAd,SAA+B,wBAAQA,UAAU,aAAlB,0BAC3B,yBACIC,QAAU,kBAAMV,EAAUF,EAAW,MACrCW,UAAS,8FAAwF,OAACH,QAAD,IAACA,OAAD,EAACA,EAAcK,QAAQ,OAACL,QAAD,IAACA,OAAD,EAACA,EAAcJ,KAA8B,GAAxB,uBAFjJ,UAII,cAAC,IAAD,CAAcU,MAAM,OAAOC,KAAK,OAAOC,MAAO,CAAEC,YAAa,QAAUN,UAAU,SACjF,uBAAMA,UAAU,UAAhB,0BAAuC,mBAAGA,UAAU,qBAAqBK,MAAO,CAACE,SAAU,OAAQJ,MAAO,mBAE9G,qBAAKH,UAAU,sBAAsBK,MAAO,CAAEG,OAAQ,QAAtD,SACKT,GACGA,EAAMU,KAAI,SAAAC,GAAI,OACL,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,MAAOlB,GACV,yBAEIQ,QAAU,kBAAMV,EAAUF,EAAW,CAAEI,IAAG,OAAEiB,QAAF,IAAEA,OAAF,EAAEA,EAAMC,GAAIT,KAAI,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAMR,SAClEF,UAAS,6FAAwFU,EAAKC,MAAL,OAAYd,QAAZ,IAAYA,OAAZ,EAAYA,EAAcJ,KAAM,sBAAwB,IAH7J,UAKI,cAAC,IAAD,CAAcU,MAAM,OAAOC,KAAK,OAAOC,MAAO,CAAEC,YAAa,QAAUN,UAAU,SACjF,uBAAMA,UAAU,UAAhB,UAA2BU,EAAKR,KAAhC,IAAsC,mBAAGF,UAAU,qBAAqBK,MAAO,CAACE,SAAU,OAAQJ,MAAO,kBALpGO,EAAKC,aCvBjCC,EAAM,WAEf,IAAQC,EAAanB,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAAxCe,SACApB,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCH,IAGR,OACI,qCACI,oBAAIO,UAAU,iBAAd,SAA+B,wBAAQA,UAAU,aAAlB,qBAC/B,qBAAKA,UAAU,sBAAsBK,MAAO,CAAEG,OAAQ,QAAtD,SACCK,GACGA,EAASJ,KAAI,SAAAC,GAAI,OACR,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,MAAOlB,GACV,yBAEIO,UAAU,qFAFd,UAII,cAAC,IAAD,CAAcG,MAAM,OAAOC,KAAK,OAAOC,MAAO,CAAEC,YAAa,QAAUN,UAAU,SACjF,sBAAMA,UAAU,UAAhB,SAA2BU,EAAKR,SAJ3BQ,EAAKjB,c,SCNzBqB,EAAQ,WAEjB,MAA0BC,mBAAS,UAAnC,mBAAOpB,EAAP,KAAcqB,EAAd,KACMzB,EAAWC,cACjB,EAAsBE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAzCH,EAAR,EAAQA,IAAKS,EAAb,EAAaA,KACLH,EAAUL,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAArCC,MACAF,EAAiBH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAA5CD,aAEFoB,EAAaC,uBAAY,WACjBnB,EAAMoB,MAAM,SAAAT,GAAI,OAAIA,EAAKC,MAAL,OAAYd,QAAZ,IAAYA,OAAZ,EAAYA,EAAcJ,SAEpDF,EAAUF,EAAW,OAE1B,CAACU,EAAD,OAAQF,QAAR,IAAQA,OAAR,EAAQA,EAAcJ,IAAKF,IAE9B6B,qBAAU,WACPH,MACA,CAAClB,EAAOkB,IAQX,OACI,wBAAOjB,UAAU,QAAjB,UACI,iCACI,sBAAKA,UAAU,uEAAuEK,MAAO,CAAEG,OAAQ,QAAvG,UACI,gCACI,cAAC,IAAD,CAAcL,MAAM,OAAOC,KAAK,OAAOC,MAAO,CAAEC,YAAa,QAAUN,UAAU,SACjF,sBAAMA,UAAU,qBAAhB,SAAsCE,OAE1C,eAACmB,EAAA,EAAD,CAAgBC,MAAO,cAAC,IAAD,IAAsBX,GAAG,uBAAuBY,QAAQ,OAAOvB,UAAU,UAAhG,UACI,cAACwB,EAAA,EAASC,SAAV,CAAmBzB,UAAU,0BAA7B,SACI,gDAEJ,cAACwB,EAAA,EAASE,KAAV,CAAeC,GAAG,SAAS1B,QAlB1B,WACjBV,EJwDqB,CAACR,KAAMH,IIvD5BW,EHL6B,CAAER,KAAMH,IGMrCgD,aAAaC,WAAW,eAe0C7B,UAAU,0BAA5D,2BAMZ,mBAAGA,UAAU,8BAAb,SAA4CP,IAC5C,qBAAKO,UAAU,2CAAf,SACI,eAAC,IAAD,CAAM8B,GAAG,SAAS9B,UAAU,iDAA5B,UAA6E,cAAC,IAAD,CAAYA,UAAU,SAAnG,uBAEJ,gCACI,eAAC+B,EAAA,EAAD,CAAaC,aAAW,eAAYhC,UAAU,QAA9C,UACI,wBACIC,QAAU,kBAAMe,EAAS,WACzBhB,UAAS,uBAA4B,WAAVL,GAAsB,sBAAxC,uBACTU,MAAO,CAAE4B,MAAO,OAHpB,wBAOA,wBACIhC,QAAU,kBAAMe,EAAS,QACzBhB,UAAS,uBAA4B,QAAVL,GAAmB,sBAArC,uBACTU,MAAO,CAAE4B,MAAO,OAHpB,sBAQS,WAAVtC,EACD,cAAC,EAAD,IACA,cAAC,EAAD,W,kCCxELuC,EAAkB,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMjC,EAAgB,EAAhBA,KAAMkC,EAAU,EAAVA,KAQzC,OACI,eAACC,EAAA,EAAOC,IAAR,CACIC,QAAS,CACLC,MAAO,CAAC,EAAG,IAAK,IAEpBxC,UAAU,yFACVK,MAAO,CAAEoC,YAAa,OAAQC,aAAc,OAAQC,WAAY,UAAWC,WAAY,OAAQC,SAAU,OAL7G,UAOK3C,GACD,sBAAKF,UAAU,iEAAiEK,MAAO,CAAEE,SAAU,QAAnG,UACKL,EACD,cAACmB,EAAA,EAAD,CAAgBC,MAAM,GAAGlB,KAAK,KAAKO,GAAG,uBAAtC,SACI,cAACa,EAAA,EAASE,KAAV,CAAeC,GAAG,SAAS1B,QAlBxB,WACf6C,UAAUC,UAAUC,UAAWb,GAAOc,MAAK,WACvCC,IAAKC,KAAK,uBAgB8CnD,UAAU,0BAA1D,+BAMPmC,EACD,sBAAMnC,UAAU,oCAAoCK,MAAO,CAAEE,SAAU,QAAvE,SAAkF6B,QC7BjFgB,EAAc,SAAC,GAAkB,IAAjBjB,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAE/B,OACI,eAACC,EAAA,EAAOC,IAAR,CACIC,QAAS,CACLC,MAAO,CAAC,EAAG,IAAK,IAEpBxC,UAAU,yFACVK,MAAO,CAAGC,YAAa,OAAQ+C,gBAAiB,UAAWR,SAAU,OALzE,UAOKV,EACD,sBAAMnC,UAAU,oCAAoCK,MAAO,CAAEE,SAAU,QAAvE,SAAkF6B,QCPjFkB,GAAO,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEbC,EAAUC,mBACRC,EAAahE,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAAxC4D,SACAjE,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCH,IAEFkE,EAASzC,uBAAa,SAAA0C,GACpBA,GACAA,EAAKC,eAAe,CAAEC,SAAU,aAErC,IAaH,OACI,sBAAK9D,UAAU,aAAf,UACI,sBAAKA,UAAU,4BAA4BK,MAAO,CAAEsC,WAAY,WAAhE,UACI,qBAAKoB,IAAI,oBAAoBC,IAAI,0BAA0BrD,GAAG,WAAWX,UAAU,SACnF,sBAAMA,UAAU,0BAAhB,6BAEJ,sBAAKA,UAAU,mCAAmCK,MAAO,CAAEsC,WAAY,WAAvE,UAC0B,IAApBe,EAASO,QACP,qBAAKjE,UAAU,uCAAf,mEAEkB,IAApB0D,EAASO,QACP,qBAAKjE,UAAU,sCAAf,SACI,cAACkE,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAS7C,QAAQ,cAGzDmC,GACGA,EAASjD,KAAI,SAAC4D,EAASC,GACnB,IAAMC,EAAcb,EAASO,OAAS,IAAMK,EAC5C,OAAGD,EAAQ3D,KAAK8D,MAAQ/E,EACb,qBAAiBO,UAAU,2CAA2CyE,IAAKF,EAAcZ,EAAS,KAAlG,SACH,cAAC,EAAD,CAEIxB,KAAMkC,EAAQA,QACdjC,KAAMiC,EAAQjC,MAFTkC,IAFIA,GAQV,qBAAiBtE,UAAU,6CAA6CyE,IAAKF,EAAcZ,EAAS,KAApG,SACH,cAAC,EAAD,CAEIxB,KAAMkC,EAAQA,QACdnE,KAAMmE,EAAQ3D,KAAKR,KACnBkC,KAAMiC,EAAQjC,MAHTkC,IAFIA,SAajC,qBAAK3D,GAAG,aAAaN,MAAO,CAAEG,OAAQ,OAAQyB,MAAO,OAAQyC,QAAS,UAAW/B,WAAY,WAA7F,SACI,uBAAMgC,SAnDG,SAACC,GAClBA,EAAEC,iBAC2B,KAA1BrB,EAAQsB,QAAQC,OAGfxB,EAAYC,EAAQsB,QAAQC,OAF5BvB,EAAQsB,QAAQC,MAAQ,IAgDU/E,UAAU,kCAAxC,UACI,uBAAOyE,IAAKjB,EAASzE,KAAK,OAAOiB,UAAU,QAAQW,GAAG,gBAAgBqE,YAAY,qBAAqBC,aAAa,QACpH,wBAAQlG,KAAK,SAAS4B,GAAG,iBAAiBX,UAAU,4BAApD,SAAgF,cAAC,IAAD,CAAUG,MAAM,OAAOC,KAAK,oBAQhIkD,GAAK4B,SAAW,CACZ3B,YAAa4B,IAAUC,KAAKC,YC1EzB,IAAMC,GAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAEpB/B,EAAUC,mBACR5D,EAAiBH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAA5CD,aACA2F,EAAiB9F,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAA5C0F,aACA/F,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCH,IACFF,EAAWC,cAEXmE,EAASzC,uBAAa,SAAA0C,GACpBA,GACAA,EAAKC,eAAe,CAAEC,SAAU,aAErC,IAwBH,OAZA1C,qBAAU,YAEN,OAAGvB,QAAH,IAAGA,OAAH,EAAGA,EAAcJ,MACbgG,IAAMC,IAAN,UAAaC,0CAAb,kCAAoElG,EAApE,mBAA2EI,QAA3E,IAA2EA,OAA3E,EAA2EA,EAAcJ,KAAO,CAC5FmG,QAAS,CACL,UAAWhE,aAAaiE,QAAQ,cAChC,eAAgB,sBAErB5C,MAAM,gBAAGnE,EAAH,EAAGA,KAAH,OAAcS,EAAUH,EAAgBN,EAAKgH,oBAE3D,QAACjG,QAAD,IAACA,OAAD,EAACA,EAAcJ,IAAf,OAAoBI,QAApB,IAAoBA,OAApB,EAAoBA,EAAcK,KAAMT,EAAKF,IAG5C,sBAAKS,UAAU,aAAf,UACI,qBAAKA,UAAU,iCAAiCK,MAAO,CAAEsC,WAAY,WAArE,SACI,sBAAM3C,UAAU,0BAAhB,SAA2CH,EAAaK,SAE5D,sBAAKF,UAAU,mCAAmCK,MAAO,CAAEsC,WAAY,WAAvE,UAC0B,IAAxB6C,EAAavB,QACX,sBAAKjE,UAAU,uCAAf,oFAAoHH,QAApH,IAAoHA,OAApH,EAAoHA,EAAcK,KAAlI,OAEsB,IAAxBsF,EAAavB,QACX,qBAAKjE,UAAU,sCAAf,SACI,cAACkE,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAS7C,QAAQ,cAGzDiE,GACOA,EAAa/E,KAAI,SAAC4D,EAASC,GACvB,IAAMC,EAAciB,EAAavB,OAAS,IAAMK,EAChD,OAAGD,EAAQ0B,YAActG,EACd,qBAAiBO,UAAU,2CAA2CyE,IAAKF,EAAcZ,EAAS,KAAlG,SACH,cAAC,EAAD,CAEIxB,KAAMkC,EAAQA,QACdjC,KAAMiC,EAAQjC,MAFTkC,IAFIA,GAQV,qBAAiBtE,UAAU,6CAA6CyE,IAAKF,EAAcZ,EAAS,KAApG,SACH,cAAC,EAAD,CAEIxB,KAAMkC,EAAQA,QACdjC,KAAMiC,EAAQjC,MAFTkC,IAFIA,SAYjC,qBAAK3D,GAAG,aAAaN,MAAO,CAAEG,OAAQ,OAAQyB,MAAO,OAAQyC,QAAS,UAAW/B,WAAY,WAA7F,SACI,uBAAMgC,SA7DG,SAACC,GAClBA,EAAEC,iBAC2B,KAA1BrB,EAAQsB,QAAQC,OAGfQ,EAAmB/B,EAAQsB,QAAQC,OAFnCvB,EAAQsB,QAAQC,MAAQ,IA0DU/E,UAAU,kCAAxC,UACI,uBAAOyE,IAAKjB,EAASzE,KAAK,OAAOiB,UAAU,QAAQW,GAAG,gBAAgBqE,YAAY,qBAAqBC,aAAa,QACpH,wBAAQlG,KAAK,SAAS4B,GAAG,iBAAiBX,UAAU,aAApD,SACI,cAAC,IAAD,CAAUG,MAAM,oB,+BChFlC6F,GAAgBC,IAAMC,gBAMrB,IAAMC,GAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE7B,EAA4BrF,qBAA5B,mBAAOsF,EAAP,KAAeC,EAAf,KACA,EAAsB5G,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAzCH,EAAR,EAAQA,IAAKS,EAAb,EAAaA,KACLL,EAAiBH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAA5CD,aACFN,EAAWC,cAGX+D,EAAcrC,uBAAY,SAAEmD,GAC9B,IAAMkC,EAAYC,KAAM,IAAIC,MACtBC,EAAWH,EAAUI,GAAK,GAAMJ,EAAUI,IAAM,GAAKJ,EAAUI,GAC/DvE,EAAI,UACPsE,EADO,YACuC,IAAnCH,EAAUK,GAAGC,WAAW5C,OAAxB,WAA2CsC,EAAUK,IAAOL,EAAUK,GAD1E,YACgFL,EAAUO,GAD1F,YACgGP,EAAUQ,GAD1G,YACgHR,EAAUS,IAEpIX,EAAOY,KAAK,eAAe,CAAC5C,UAAS3D,KAAMjB,EAAK2C,WACjD,CAACiE,EAAQ5G,IAEN8F,EAAqBrE,uBAAY,SAAEmD,GACrC,IAAMkC,EAAYC,KAAM,IAAIC,MACtBC,EAAWH,EAAUI,GAAK,GAAMJ,EAAUI,IAAM,GAAKJ,EAAUI,GAC/DvE,EAAI,UACPsE,EADO,YACuC,IAAnCH,EAAUK,GAAGC,WAAW5C,OAAxB,WAA2CsC,EAAUK,IAAOL,EAAUK,GAD1E,YACgFL,EAAUO,GAD1F,YACgGP,EAAUQ,GAD1G,YACgHR,EAAUS,IAEpIX,EAAOY,KAAK,uBAAwB,CAAC,CAAC5C,UAASjC,QAAO,CAAC3C,IAAKI,EAAaJ,IAAKS,KAAML,EAAaK,UAClG,QAACL,QAAD,IAACA,OAAD,EAACA,EAAcJ,IAAf,OAAoBI,QAApB,IAAoBA,OAApB,EAAoBA,EAAcK,KAAMmG,IAE3CjF,qBAAU,WACN,IAAGiF,EAAH,CACA,IAAMa,EAAYC,cAAG,wBAAyB,CAC9CC,MAAO,CAAE3H,MAAKS,UAIhB,OAFEoG,EAAUY,GAEL,kBAAMA,EAAUG,YACtB,CAAC5H,EAAKS,EAAMmG,IAEfjF,qBAAU,WACN,GAAIiF,EAKJ,OAJAA,EAAOiB,GAAG,oBAAoB,SAACtI,GAC3BO,EAAUJ,EAAYH,OAGnB,kBAAMqH,EAAOkB,IAAI,uBACzB,CAAClB,EAAQ9G,IAEZ6B,qBAAU,WACN,GAAIiF,EAMJ,OAJAA,EAAOiB,GAAG,mBAAmB,SAACtI,GAC1BO,EAAUJ,EAAYH,OAGnB,kBAAMqH,EAAOkB,IAAI,sBACzB,CAAClB,EAAQ9G,IAEZ6B,qBAAU,WACN,GAAIiF,EAMJ,OAJAA,EAAOiB,GAAG,gBAAgB,SAACtI,GACvBO,ER3DY,SAAEP,GAAF,MAAgB,CACpCD,KAAMH,EACNI,WQyDkBwI,CAASxI,OAGhB,kBAAMqH,EAAOkB,IAAI,mBACzB,CAAClB,EAAQ9G,IAEZ6B,qBAAU,WACN,GAAIiF,EAMJ,OAJAA,EAAOiB,GAAG,oBAAoB,SAACtI,GAC3BO,EAAUH,EAAgBJ,OAGvB,kBAAMqH,EAAOkB,IAAI,uBACzB,CAAClB,EAAQ9G,IAEZ6B,qBAAU,WACP,GAAIiF,EAKJ,OAHAA,EAAOiB,GAAG,oBAAoB,SAACtI,GAC1BO,ERrEe,SAAEP,GAAF,MAAgB,CACvCD,KAAMH,EACNI,WQmEkByI,CAAYzI,OAEpB,kBAAMqH,EAAOkB,IAAI,uBACxB,CAAClB,EAAQ9G,IAGZ6B,qBAAU,WAEN,IAAM8F,EAAYC,cAAG,wBAAyB,CAC9CC,MAAO,CAAE3H,MAAKS,UAId,OAFAoG,EAAUY,GAEH,kBAAMA,EAAUG,WACtB,CAAC5H,EAAKS,IAETkB,qBAAU,WACR,GAAIiF,EAMJ,OAJAA,EAAOiB,GAAG,aAAa,SAACtI,GACpBO,EC9GY,SAACP,GAAD,MAAc,CAClCD,KAAMH,EACNI,WD4GkB0I,CAAS1I,OAGhB,kBAAMqH,EAAOkB,IAAI,gBACzB,CAAClB,EAAQ9G,IAGZ,IAAMoI,EAAS,CACXpE,cACAgC,sBAGJ,OACI,cAACS,GAAc4B,SAAf,CAAwB7C,MAAO4C,EAA/B,SACMvB,K,SEjHDyB,GAAkB,WAE3B,IAAQ3H,EAASR,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCM,KACR,EAAmCR,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAAtDD,EAAR,EAAQA,aAAc6D,EAAtB,EAAsBA,SACtB,EFPOoE,qBAAW9B,IEOXzC,EAAP,EAAOA,YAAagC,EAApB,EAAoBA,mBACdhG,EAAWC,cAejB,OAbA4B,qBAAU,WACgB,IAApBsC,EAASO,QACXwB,IAAMC,IAAN,UAAaC,0CAAb,qBAA+D,CAC3DC,QAAS,CACL,UAAWhE,aAAaiE,QAAQ,cAChC,eAAgB,sBAErB5C,MAAM,gBAAGnE,EAAH,EAAGA,KAAH,OAAcS,EAAUJ,EAAYL,EAAK4E,gBAGnD,CAACnE,EAAUmE,IAIV,qCACI,eAACqE,GAAA,EAAD,WACI,kCAAS7H,EAAT,iBACA,sBAAMA,KAAK,cAAc8H,QAAQ,uDAGrC,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGhI,MAAO,CAAEsC,WAAY,WAAa3C,UAAU,MAAxD,SACI,cAAC,EAAD,MAEJ,cAACoI,EAAA,EAAD,CAAKC,GAAI,EAAGrI,UAAU,aAAtB,SACI,qBAAKA,UAAU,SAASK,MAAO,CAAEG,OAAQ,QAASyB,MAAO,QAAzD,UACiB,OAAZpC,QAAY,IAAZA,OAAA,EAAAA,EAAcJ,OAAd,OAAqBJ,QAArB,IAAqBA,OAArB,EAAqBA,EAAYa,MAChC,cAAC,GAAD,CAAaqF,mBAAoBA,IACjC,cAAC,GAAD,CAAMhC,YAAaA,iB,0FCzCpC+E,GAAmB,WAE5B,IAAOC,EAAiB7I,aAAY,SAAAC,GAAK,OAAIA,EAAM6I,SAA5CD,cAEP,OACI,qCACI,eAACR,GAAA,EAAD,WACI,0CACA,sBAAM7H,KAAK,cAAc8H,QAAQ,qCAGrC,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIhI,MAAO,CAAEsC,WAAY,WAAa3C,UAAU,MAAzD,SACI,sBAAKK,MAAO,CAAEG,OAAQ,SAAtB,UACI,qBAAKR,UAAU,YAAYK,MAAO,CAAEsC,WAAY,WAAhD,SACI,eAAC,IAAD,CAAMb,GAAG,IAAI9B,UAAU,uEAAvB,UACA,cAAC,KAAD,IADA,cAIJ,oBAAIA,UAAU,8BAAd,sDACA,oBAAIA,UAAU,wBAAd,gCACA,cAACyI,GAAA,EAAD,CAAqBxG,MAAM,OAAOzB,OAAO,MAAMR,UAAU,OAAzD,SACI,eAAC0I,GAAA,EAAD,CACIzG,MAAO,IACPzB,OAAQ,IACR1B,KAAMyJ,EACNI,OAAQ,CACJC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARhB,UAWI,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAKJ,QAAQ,WAAWK,KAAK,8B,oBCxCpDC,GAAc,WAEvB,IAAMC,EAAWjG,mBACXkG,EAAclG,mBACpB,EAA0B1C,oBAAS,GAAnC,mBAAO6I,EAAP,KAAcC,EAAd,KACMtK,EAAWC,cAuBjB,OACI,qCACI,eAACuI,GAAA,EAAD,WACI,sBAAM+B,QAAQ,UACd,iDACA,sBAAM5J,KAAK,cAAc8H,QAAQ,2BAGrC,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAClI,UAAU,2DAA2DK,MAAO,CAAEG,OAAQ,SAAvG,SACI,qBAAKH,MAAO,CAAE4B,MAAO,SAArB,SACI,eAAC8H,GAAA,EAAD,CAAMpF,SA/BD,SAACC,GAClBA,EAAEC,iBAEF,IAAMmF,EAAQN,EAAS5E,QAAQC,MACzBkF,EAAWN,EAAY7E,QAAQC,MAElB,0IAEJmF,KAAKF,IAAUC,EAAShG,QAAU,GAE7C1E,EbpBc,SAAEyK,EAAOC,GAC/B,8CAAO,WAAM1K,GAAN,iBAAA4K,EAAA,sEAEoB1E,IAAM2E,KAAN,UAAczE,0CAAd,eAA0D,CAC7EqE,QAAOC,aAHR,iBAEKnL,EAFL,EAEKA,MAIAuL,IACJzI,aAAa0I,QAAQ,aAAcxL,EAAKyL,OAExChL,EAAUV,EAAM,CACZY,IAAKX,EAAK4B,KAAKjB,IACfS,KAAMpB,EAAK4B,KAAKR,KAChB8J,MAAOlL,EAAK4B,KAAKsJ,UAGrB9G,IAAKC,KAAK,QAASrE,EAAK0L,IAAK,SAf9B,2CAAP,sDamBkBC,CAAWT,EAAOC,IAC5BP,EAAS5E,QAAQC,MAAQ,GACzB4E,EAAY7E,QAAQC,MAAQ,KAEJ,IAAjBiF,EAAM/F,QAAgBgG,EAAShG,OACtC4F,GAAS,KAgB6B7J,UAAU,oCAAxC,UACI,oBAAIA,UAAU,mCAAd,sBACA,oBAAIA,UAAU,kBAAd,iCACA,cAAC+J,GAAA,EAAKW,MAAN,CAAY1K,UAAU,OAAtB,SACI,cAAC+J,GAAA,EAAKY,QAAN,CAAc3K,UAAU,qBAAqBjB,KAAK,QAAQiG,YAAY,SAASP,IAAKiF,EAAUkB,UAAWhB,MAE7G,cAACG,GAAA,EAAKW,MAAN,UACI,cAACX,GAAA,EAAKY,QAAN,CAAc3K,UAAU,qBAAqBjB,KAAK,WAAWiG,YAAY,gBAAaP,IAAKkF,EAAaiB,UAAWhB,MAEvH,cAACiB,GAAA,EAAD,CAAQ9L,KAAK,SAASwC,QAAQ,kBAAkBvB,UAAU,aAA1D,sBAGA,cAAC,IAAD,CAAM8B,GAAG,iBAAiB9B,UAAU,sBAApC,gDChDX8K,GAAiB,WAE1B,IAAMC,EAAUtH,mBACViG,EAAWjG,mBACXkG,EAAclG,mBACpB,EAA0B1C,oBAAS,GAAnC,mBAAO6I,EAAP,KAAcC,EAAd,KACMtK,EAAWC,cAyBjB,OACI,qCACI,eAACuI,GAAA,EAAD,WACI,sBAAM+B,QAAQ,UACd,oDACA,sBAAM5J,KAAK,cAAc8H,QAAQ,iCAGrC,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAClI,UAAU,uEAAuEK,MAAO,CAAEG,OAAQ,SAAnH,SAEI,qBAAKH,MAAO,CAAE4B,MAAO,SAArB,SACI,eAAC8H,GAAA,EAAD,CAAMpF,SAlCD,SAACC,GAClBA,EAAEC,iBAEF,IAAMmF,EAAQN,EAAS5E,QAAQC,MACzBkF,EAAWN,EAAY7E,QAAQC,MAC/B7E,EAAO6K,EAAQjG,QAAQC,MAEV,0IAEJmF,KAAKF,IAAUC,EAAShG,QAAU,GAAK/D,EAAK+D,OAAS,GAEhE1E,EdEiB,SAAEW,EAAM8J,EAAOC,GACxC,8CAAO,WAAM1K,GAAN,iBAAA4K,EAAA,sEACoB1E,IAAM2E,KAAN,UAAczE,0CAAd,kBAA6D,CAChFzF,OAAM8J,QAAOC,aAFd,iBACKnL,EADL,EACKA,MAIAuL,IACJzI,aAAa0I,QAAQ,aAAcxL,EAAKyL,OAExChL,EAAUN,KAEVM,EAAUV,EAAM,CACZY,IAAKX,EAAK4B,KAAKjB,IACfS,KAAMpB,EAAK4B,KAAKR,KAChB8J,MAAOlL,EAAK4B,KAAKsJ,SAGrB9G,IAAKC,KAAK,CACN6H,SAAU,aACVC,KAAM,UACN3J,MAAO,gBACP4J,mBAAmB,EACnBC,MAAO,QAGXjI,IAAKC,KAAK,QAASrE,EAAK0L,IAAK,SAxB9B,2CAAP,sDcHkBY,CAAclL,EAAM8J,EAAOC,IACrCc,EAAQjG,QAAQC,MAAQ,GACxB2E,EAAS5E,QAAQC,MAAQ,GACzB4E,EAAY7E,QAAQC,MAAQ,KAEJ,IAAjBiF,EAAM/F,QAAgBgG,EAAShG,OAAS,GAAK/D,EAAK+D,OACzD4F,GAAS,KAiB6B7J,UAAU,oCAAxC,UACI,oBAAIA,UAAU,mCAAd,sBAWA,oBAAIA,UAAU,uBAAd,sBACA,cAAC+J,GAAA,EAAKW,MAAN,CAAY1K,UAAU,OAAtB,SACI,cAAC+J,GAAA,EAAKY,QAAN,CAAc3K,UAAU,qBAAqBjB,KAAK,OAAOiG,YAAY,SAASP,IAAKsG,EAASH,UAAWhB,MAE3G,cAACG,GAAA,EAAKW,MAAN,CAAY1K,UAAU,OAAtB,SACI,cAAC+J,GAAA,EAAKY,QAAN,CAAc3K,UAAU,qBAAqBjB,KAAK,QAAQiG,YAAY,SAASP,IAAKiF,EAAUkB,UAAWhB,MAE7G,cAACG,GAAA,EAAKW,MAAN,UACI,cAACX,GAAA,EAAKY,QAAN,CAAc3K,UAAU,qBAAqBjB,KAAK,WAAWiG,YAAY,gBAAaP,IAAKkF,EAAaiB,UAAWhB,MAEvH,cAACiB,GAAA,EAAD,CAAQ9L,KAAK,SAASwC,QAAQ,kBAAkBvB,UAAU,aAA1D,yBAGA,cAAC,IAAD,CAAM8B,GAAG,cAAc9B,UAAU,sBAAjC,gDCtEXqL,GAAa,WACtB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WAEI,cAAC,IAAD,CACIC,KAAK,cACLC,UAAW9B,KAGf,cAAC,IAAD,CACI6B,KAAK,iBACLC,UAAWT,KAGf,cAAC,IAAD,CAAUhJ,GAAG,sB,mBCjBhB0J,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACYC,EAEV,EAFFH,UACGI,EACD,gDAEF,OACI,cAAC,IAAD,6BAAWA,GAAX,IACIJ,UAAY,SAACK,GAAD,OACNH,EACM,cAACC,EAAD,gBAAgBE,IAChB,cAAC,IAAD,CAAU9J,GAAG,gBCXxB+J,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACYC,EAEV,EAFFH,UACGI,EACD,gDAIF,OACI,cAAC,IAAD,6BAAWA,GAAX,IACIJ,UAAY,SAACK,GAAD,OACNH,EACM,cAAC,IAAD,CAAU3J,GAAG,MACb,cAAC4J,EAAD,gBAAgBE,SCJ3BE,GAAY,WAErB,IAAMvM,EAAWC,cAEjB,EAA0BE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA7CmM,EAAR,EAAQA,SAAUtM,EAAlB,EAAkBA,IASlB,OANA2B,qBAAU,WAEN7B,ElBwCJ,uCAAO,WAAMA,GAAN,iBAAA4K,EAAA,sEACoB1E,IAAMC,IAAN,UAAaC,0CAAb,eAAwD,CAC3EC,QAAS,CACL,UAAWhE,aAAaiE,QAAQ,cAChC,eAAgB,sBAJrB,iBACK/G,EADL,EACKA,MAOAuL,IACJzI,aAAa0I,QAAQ,aAAcxL,EAAKyL,OAExChL,EAAUV,EAAM,CACZY,IAAKX,EAAK4B,KAAKjB,IACfS,KAAMpB,EAAK4B,KAAKR,KAChB8J,MAAOlL,EAAK4B,KAAKsJ,UAGrBzK,EAAUL,KAjBX,2CAAP,yDkBtCG,CAACK,IAEAwM,EAEI,qBAAK/L,UAAU,WAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,sBAO3B,cAAC,GAAD,UACK,cAAC,IAAD,UACG,eAAC,IAAD,WAEI,cAAC,GAAD,CACIyL,kBAAmBhM,EACnB6L,KAAK,QACLC,UAAYF,KAGhB,cAAC,GAAD,CACII,kBAAmBhM,EACnBuM,OAAK,EACLV,KAAK,IACLC,UAAY1D,KAGhB,cAAC,GAAD,CACI4D,kBAAmBhM,EACnB6L,KAAK,SACLC,UAAYjD,KAGhB,cAAC,IAAD,CAAUxG,GAAG,wB,oBC/D3BmK,GAAe,CACjBF,UAAU,EACV9M,SAAS,GCFPgN,GAAe,CACjBvI,SAAU,GACV3D,MAAO,GACPF,aAAc,GACd2F,aAAc,GACd3E,SAAU,ICLRoL,GAAe,CACjB1D,cAAe,ICGb2D,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7B3M,KHFuB,WAAkC,IAAjCD,EAAgC,uDAAzBsM,GAAcO,EAAW,uCACxD,OAAQA,EAAOzN,MACX,KAAKH,EACD,OAAO,6BACAe,GADP,IAEIoM,UAAU,GACPS,EAAOxN,SAGlB,KAAKJ,EACD,MAAO,CACHmN,UAAU,GAGlB,KAAKnN,EACD,OAAO,6BACAe,GADP,IAEIoM,UAAU,IAElB,KAAKnN,EACD,OAAO,6BACAe,GADP,IAEIV,SAAS,IAEjB,QACI,OAAOU,IGtBfG,UFA4B,WAAmC,IAAlCH,EAAiC,uDAAzBsM,GAAcO,EAAW,uCAE9D,OAAQA,EAAOzN,MACX,KAAKH,EACD,OAAO,6BACAe,GADP,IAEI+D,SAAU8I,EAAOxN,UAEzB,KAAKJ,EACD,OAAO,6BACAe,GADP,IAEII,MAAOyM,EAAOxN,UAEtB,KAAKJ,EACD,MAAO,CACH8E,SAAU,GACV3D,MAAO,IAEf,KAAKnB,EACD,OAAO,6BACAe,GADP,IAEIE,aAAc2M,EAAOxN,UAE7B,KAAKJ,EACD,OAAO,6BACAe,GADP,IAEI6F,aAAcgH,EAAOxN,UAE7B,KAAKJ,EACD,OAAO,6BACAe,GADP,IAEIkB,SAAU2L,EAAOxN,UAEzB,QACI,OAAOW,IEjCf6I,MDLwB,WAAmC,IAAlC7I,EAAiC,uDAAzBsM,GAAcO,EAAW,uCAE1D,OAAQA,EAAOzN,MACX,KAAKH,EACD,OAAO,6BACAe,GADP,IAEI4I,cAAeiE,EAAOxN,UAE9B,QACI,OAAOW,MCDN8M,GAAQC,aACjBJ,GACAJ,GAAkBS,aAAgBC,Q,cCDvBC,OATf,WAEE,OACE,cAAC,IAAD,CAAUJ,MAAQA,GAAlB,SACE,cAAC,GAAD,O,cCJNK,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ea0632a4.chunk.js","sourcesContent":["export const types = {\r\n    authCheckingJWTFinish: \"AUTH checking JWT finish\",\r\n    authLogin: \"AUTH login\",\r\n    authLogout: \"AUTH logout\",\r\n    newUser: \"AUTH new user\",\r\n\r\n    addMessages: \"DASHBOARD add messages\",\r\n    addChatMessages: \"DASHBOARD add chat messages\",\r\n    addUsers: \"DASHBOARD add users\",\r\n    cleanDashboard: \"DASHBOARD clean\",\r\n    selectUser: \"DASHBOARD select user\",\r\n    addAllUsers: \"DASHBOARD add all registered users\",\r\n    \r\n    loadStats: \"STATS load stats\"\r\n}","import axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n\r\n        const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, {\r\n            email, password\r\n        })\r\n\r\n        if(data.ok){\r\n            localStorage.setItem('chat-token', data.token);\r\n\r\n            dispatch( login({\r\n                uid: data.user.uid,\r\n                name: data.user.name,\r\n                email: data.user.email\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst login = ( data ) => ({\r\n    type: types.authLogin,\r\n    payload: data\r\n});\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async(dispatch) => {\r\n        const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/register`, {\r\n            name, email, password\r\n        });\r\n \r\n        if(data.ok) {\r\n            localStorage.setItem('chat-token', data.token);\r\n            \r\n            dispatch( newUser() );\r\n\r\n            dispatch( login({\r\n                uid: data.user.uid,\r\n                name: data.user.name,\r\n                email: data.user.email\r\n            }));\r\n\r\n            Swal.fire({\r\n                position: 'bottom-end',\r\n                icon: 'success',\r\n                title: 'Cuenta creada',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error')\r\n        } \r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/auth/renew`,{\r\n            headers: {\r\n                'x-token': localStorage.getItem('chat-token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if(data.ok) {\r\n            localStorage.setItem('chat-token', data.token);\r\n\r\n            dispatch( login({\r\n                uid: data.user.uid,\r\n                name: data.user.name,\r\n                email: data.user.email\r\n            }))\r\n        } else {\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n}\r\n\r\nconst newUser = () => ({ type: types.newUser })\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingJWTFinish })\r\n\r\nexport const logout = () => ({type: types.authLogout})\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const addMessages = ( payload ) => ({\r\n    type: types.addMessages,\r\n    payload\r\n})\r\n\r\nexport const addChatMessages = (payload) => ({\r\n    type: types.addChatMessages,\r\n    payload\r\n})\r\n\r\nexport const addUsers = ( payload ) => ({\r\n    type: types.addUsers,\r\n    payload\r\n})\r\n\r\nexport const selectUser = ( payload ) => ({\r\n    type: types.selectUser,\r\n    payload\r\n})\r\n\r\nexport const addAllUsers = ( payload ) => ({\r\n    type: types.addAllUsers,\r\n    payload\r\n})\r\n\r\nexport const cleanDashboard = () => ({ type: types.cleanDashboard })","import React from 'react'\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from '../../actions/dashboard';\r\n\r\nexport const Online = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n    const { users } = useSelector(state => state.dashboard);\r\n\r\n    return (\r\n        <>\r\n            <h5 className=\"lead ms-4 my-3\"><strong className=\"text-light\">Conectados</strong></h5>\r\n                <button \r\n                    onClick={ () => dispatch( selectUser({}) )}\r\n                    className={`text-white w-100 text-start animate__animated animate animate__fadeIn user-sidebar ${!selectedUser?.name && !selectedUser?.uid ? 'user-sidebar-active' : ''}`} \r\n                >\r\n                    <FaUserCircle color=\"#fff\" size=\"26px\" style={{ marginRight: '10px' }} className=\"ms-3\"/>\r\n                    <span className=\"fw-bold\">Sala general <i className=\"fas fa-circle mx-2\" style={{fontSize: '12px', color: '#1DD200'}}></i></span>\r\n                </button>\r\n                <div className=\"w-100 overflow-auto\" style={{ height: '45vh' }}>\r\n                    {users &&\r\n                        users.map(user => (\r\n                            (user?.id !== uid) &&\r\n                                <button \r\n                                    key={user.id} \r\n                                    onClick={ () => dispatch( selectUser({ uid: user?.id, name: user?.name }) )}\r\n                                    className={`text-white w-100 text-start animate__animated animate animate__fadeIn user-sidebar ${user.id === selectedUser?.uid ? 'user-sidebar-active' : ''}`} \r\n                                >\r\n                                    <FaUserCircle color=\"#fff\" size=\"26px\" style={{ marginRight: '10px' }} className=\"ms-3\"/>\r\n                                    <span className=\"fw-bold\">{user.name} <i className=\"fas fa-circle mx-2\" style={{fontSize: '12px', color: '#1DD200'}}></i></span>\r\n                                </button>\r\n                        ))\r\n                    }\r\n                </div>\r\n                    \r\n        </>\r\n    )\r\n}\r\n ","import React from 'react'\r\nimport { FaUserCircle } from 'react-icons/fa'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const All = () => {\r\n\r\n    const { allUsers } = useSelector(state => state.dashboard);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h5 className=\"lead ms-4 my-3\"><strong className=\"text-light\">Todos</strong></h5>\r\n            <div className=\"w-100 overflow-auto\" style={{ height: '55vh' }}>\r\n            {allUsers &&\r\n                allUsers.map(user => (\r\n                    (user?.id !== uid) &&\r\n                        <button \r\n                            key={user.uid} \r\n                            className=\"text-white w-100 text-start animate__animated animate animate__fadeIn user-sidebar\" \r\n                        >\r\n                            <FaUserCircle color=\"#fff\" size=\"26px\" style={{ marginRight: '10px' }} className=\"ms-3\"/>\r\n                            <span className=\"fw-bold\">{user.name}</span>\r\n                        </button>\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { ButtonGroup, Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { FaUserCircle } from 'react-icons/fa'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../actions/auth'\r\nimport { cleanDashboard, selectUser } from '../../actions/dashboard';\r\nimport { Online } from './Online';\r\nimport { All } from './All';\r\nimport { Link } from 'react-router-dom';\r\nimport { IoIosStats } from 'react-icons/io';\r\n\r\nexport const Aside = () => {\r\n\r\n    const [state, setState] = useState('online')\r\n    const dispatch = useDispatch();\r\n    const { uid, name } = useSelector(state => state.auth);\r\n    const { users } = useSelector(state => state.dashboard);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n\r\n    const userLeaves = useCallback(() => {\r\n        const u = users.find( user => user.id === selectedUser?.uid );\r\n        if(!u) {\r\n            dispatch( selectUser({}) )\r\n        }\r\n    }, [users, selectedUser?.uid, dispatch])\r\n\r\n    useEffect(() => {\r\n       userLeaves()\r\n    }, [users, userLeaves])\r\n    \r\n    const handleLogout = () => {\r\n        dispatch( logout() );\r\n        dispatch( cleanDashboard() );\r\n        localStorage.removeItem('chat-token');\r\n    }\r\n\r\n    return (\r\n        <aside className=\"h-100\">\r\n            <header>\r\n                <div className=\"w-100 bg-dark d-flex justify-content-between align-items-center px-2\" style={{ height: '60px' }}>\r\n                    <div>\r\n                        <FaUserCircle color=\"#fff\" size=\"26px\" style={{ marginRight: '10px' }} className=\"ms-3\"/>\r\n                        <span className=\"fw-bold text-white\">{name}</span>\r\n                    </div>\r\n                    <DropdownButton title={<AiTwotoneSetting />} id=\"dropdown-item-button\" variant=\"dark\" className=\"bg-dark\">\r\n                        <Dropdown.ItemText className=\"bg-secondary text-light\">\r\n                            <strong>Opciones</strong>\r\n                        </Dropdown.ItemText>\r\n                        <Dropdown.Item as=\"button\" onClick={handleLogout} className=\"bg-secondary text-light\">\r\n                            Salir\r\n                        </Dropdown.Item>\r\n                    </DropdownButton>\r\n                </div>\r\n            </header>\r\n            <p className=\"text-muted text-center mt-2\">{uid}</p>\r\n            <div className=\"w-100 d-flex justify-content-center mb-3\">\r\n                <Link to=\"/stats\" className=\"btn btn-outline-info d-flex align-items-center\"><IoIosStats className=\"me-1\"/>Estadísticas</Link>\r\n            </div>\r\n            <div>\r\n                <ButtonGroup aria-label=\"selección\" className=\"w-100\">\r\n                    <button \r\n                        onClick={ () => setState('online')} \r\n                        className={`button-group ${state === 'online' && 'button-group-active'} fw-bold text-white`}\r\n                        style={{ width: '50%' }}\r\n                    >\r\n                        Conectados\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => setState('all')} \r\n                        className={`button-group ${state === 'all' && 'button-group-active'} fw-bold text-white` }\r\n                        style={{ width: '50%' }}\r\n                    >\r\n                        Todos\r\n                    </button>\r\n                </ButtonGroup>\r\n                {( state === 'online' ) \r\n                ? <Online />\r\n                : <All />\r\n                }\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const MessageReceived = ({text, name, date}) => {\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText( text ).then(() => {\r\n            Swal.fire('Mensaje copiado')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n            animate={{\r\n                scale: [1, 1.1, 1]\r\n            }}\r\n            className=\"px-3 py-1 d-flex flex-column rounded text-white mb-3 animate__animated animate__fadeIn\" \r\n            style={{ paddingLeft: '10px', paddingRight: '20px', background: '#262D31', marginLeft: '60px', maxWidth: '60%'}}\r\n        >\r\n            {name && \r\n            <div className=\"lead fw-bold d-flex justify-content-between align-items-center\" style={{ fontSize: '14px'}}>\r\n                {name}\r\n                <DropdownButton title=\"\" size=\"sm\" id=\"dropdown-item-button\">\r\n                    <Dropdown.Item as=\"button\" onClick={handleCopy} className=\"bg-secondary text-light\">\r\n                        Copiar texto\r\n                    </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>}\r\n            \r\n            {text}\r\n            <span className=\"d-block text-muted align-self-end\" style={{ fontSize: '12px' }}>{date}</span>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nMessageReceived.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    date: PropTypes.string.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const MessageSent = ({text, date}) => {\r\n\r\n    return (\r\n        <motion.div \r\n            animate={{\r\n                scale: [1, 1.1, 1]\r\n            }}\r\n            className=\"px-3 py-1 d-flex flex-column rounded text-white mb-3 animate__animated animate__fadeIn\" \r\n            style={{  marginRight: '60px', backgroundColor: '#056162', maxWidth: '60%' }}\r\n        >\r\n            {text}\r\n            <span className=\"d-block text-light align-self-end\" style={{ fontSize: '12px' }}>{date}</span>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nMessageSent.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired\r\n}","import React, { useCallback, useRef } from 'react'\r\nimport { IoMdSend } from 'react-icons/io'\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { MessageReceived } from '../dashboard/MessageReceived';\r\nimport { MessageSent } from '../dashboard/MessageSent';\r\n\r\nexport const Chat = ({ sendMessage }) => {\r\n\r\n    const textRef = useRef();\r\n    const { messages } = useSelector(state => state.dashboard);\r\n    const { uid } = useSelector(state => state.auth);\r\n    \r\n    const setRef = useCallback( node => {\r\n        if( node ) {\r\n            node.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(textRef.current.value === ''){\r\n            textRef.current.value = '';\r\n        } else {\r\n            sendMessage(textRef.current.value);\r\n            textRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat w-100\">\r\n            <div className=\"d-flex align-items-center\" style={{ background: '#2A2F32' }}>\r\n                <img src=\"./assets/img1.jpg\" alt=\"Foto de perfil de grupo\" id=\"img-chat\" className=\"ms-3\"/>\r\n                <span className=\"text-white fw-bold ms-3\">Chat general</span>\r\n            </div>\r\n            <div className=\"chat-messages overflow-auto pt-4\" style={{ background: '#333A41' }}>\r\n                {(messages.length === 0) && \r\n                    <div className=\"alert alert-warning text-center mx-5\">Todavía no hay mensajes, comienza escribiendo uno.</div>\r\n                }\r\n                {(messages.length === 0) &&\r\n                    <div className=\"w-100 d-flex justify-content-center\">\r\n                        <Spinner animation=\"border\" role=\"status\" variant=\"primary\" />\r\n                    </div>\r\n                }\r\n                {messages &&\r\n                    messages.map((message, index) => {\r\n                        const lastMessage = messages.length - 1 === index;\r\n                        if(message.user._id === uid){\r\n                            return <div key={index} className=\"d-flex w-100 align-items-end flex-column\" ref={lastMessage ? setRef : null}>   \r\n                                <MessageSent \r\n                                    key={index} \r\n                                    text={message.message}\r\n                                    date={message.date}\r\n                                />\r\n                            </div>\r\n                        } else {\r\n                            return <div key={index} className=\"d-flex w-100 align-items-start flex-column\" ref={lastMessage ? setRef : null}>\r\n                                <MessageReceived \r\n                                    key={index} \r\n                                    text={message.message} \r\n                                    name={message.user.name}\r\n                                    date={message.date}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n           \r\n            <div id=\"chat-input\" style={{ height: '100%', width: '100%', padding: '0 150px', background: '#2A2F32' }}>\r\n                <form onSubmit={handleSubmit} className=\"h-100 d-flex align-items-center\">\r\n                    <input ref={textRef} type=\"text\" className=\"w-100\" id=\"message-input\" placeholder=\"Escribe un mensaje\" autoComplete=\"off\"/>\r\n                    <button type=\"submit\" id=\"message-submit\" className=\"d-flex align-items-center\"><IoMdSend color=\"#fff\" size=\"18px\"/></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nChat.propType = {\r\n    sendMessage: PropTypes.func.isRequired\r\n}","import axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef } from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { IoMdSend } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addChatMessages } from '../../actions/dashboard';\r\nimport { MessageReceived } from '../dashboard/MessageReceived';\r\nimport { MessageSent } from '../dashboard/MessageSent';\r\n\r\nexport const PrivateChat = ({ sendPrivateMessage }) => {\r\n\r\n    const textRef = useRef();\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n    const { chatMessages } = useSelector(state => state.dashboard);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const setRef = useCallback( node => {\r\n        if( node ) {\r\n            node.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(textRef.current.value === ''){\r\n            textRef.current.value = '';\r\n        } else {\r\n            sendPrivateMessage(textRef.current.value);\r\n            textRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Solo si hay un usuario (chat) seleccionado\r\n        if(selectedUser?.uid) {\r\n            axios.get(`${process.env.REACT_APP_API_URL}/messages/get-all-chat/${uid}/${selectedUser?.uid}`, {\r\n                headers: {\r\n                    'x-token': localStorage.getItem('chat-token'),\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then( ( {data} ) => dispatch( addChatMessages(data.messagesChat) ))\r\n        }\r\n    }, [selectedUser?.uid, selectedUser?.name, uid, dispatch]); \r\n\r\n    return (\r\n        <div className=\"chat w-100\">\r\n            <div className=\"py-2 d-flex align-items-center\" style={{ background: '#2A2F32' }}>\r\n                <span className=\"text-white fw-bold ms-3\">{selectedUser.name}</span>\r\n            </div>\r\n            <div className=\"chat-messages overflow-auto pt-4\" style={{ background: '#333A41' }}>\r\n            {(chatMessages.length === 0) && \r\n                <div className=\"alert alert-warning text-center mx-5\">Todavía no hay mensajes, comienza escribiendole un mensaje a {selectedUser?.name}.</div>\r\n            }\r\n            {(chatMessages.length === 0) &&\r\n                <div className=\"w-100 d-flex justify-content-center\">\r\n                    <Spinner animation=\"border\" role=\"status\" variant=\"primary\" />\r\n                </div>\r\n            }\r\n            {chatMessages &&\r\n                    chatMessages.map((message, index) => {\r\n                        const lastMessage = chatMessages.length - 1 === index;\r\n                        if(message.recipient !== uid){\r\n                            return <div key={index} className=\"d-flex w-100 align-items-end flex-column\" ref={lastMessage ? setRef : null}>\r\n                                <MessageSent \r\n                                    key={index} \r\n                                    text={message.message}\r\n                                    date={message.date}\r\n                                />\r\n                            </div>\r\n                        } else {\r\n                            return <div key={index} className=\"d-flex w-100 align-items-start flex-column\" ref={lastMessage ? setRef : null}>\r\n                                <MessageReceived \r\n                                    key={index} \r\n                                    text={message.message} \r\n                                    date={message.date}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n           \r\n            <div id=\"chat-input\" style={{ height: '100%', width: '100%', padding: '0 150px', background: '#2A2F32' }}>\r\n                <form onSubmit={handleSubmit} className=\"h-100 d-flex align-items-center\">\r\n                    <input ref={textRef} type=\"text\" className=\"w-100\" id=\"message-input\" placeholder=\"Escribe un mensaje\" autoComplete=\"off\"/>\r\n                    <button type=\"submit\" id=\"message-submit\" className=\"bg-primary\">\r\n                        <IoMdSend color=\"#fff\"/>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport dayjs from 'dayjs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { io } from 'socket.io-client';\r\nimport { addChatMessages, addMessages, addUsers, addAllUsers } from '../actions/dashboard';\r\nimport { setStats } from '../actions/stats';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n    return useContext(SocketContext)\r\n}\r\n\r\nexport const SocketProvider = ( {children} ) => {\r\n\r\n    const [socket, setSocket] = useState();\r\n    const { uid, name } = useSelector(state => state.auth);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const sendMessage = useCallback(( message ) => {\r\n        const dateDayJS = dayjs(new Date());\r\n        const newHour = (dateDayJS.$H > 12) ? dateDayJS.$H -= 12 : dateDayJS.$H;\r\n        const date = \r\n        `${newHour}:${dateDayJS.$m.toString().length === 1 ? `0${dateDayJS.$m}` : dateDayJS.$m} ${dateDayJS.$D}/${dateDayJS.$W}/${dateDayJS.$y}`;\r\n\r\n        socket.emit('send-message',{message, user: uid, date})\r\n    }, [socket, uid]);\r\n\r\n    const sendPrivateMessage = useCallback(( message ) => {\r\n        const dateDayJS = dayjs(new Date());\r\n        const newHour = (dateDayJS.$H > 12) ? dateDayJS.$H -= 12 : dateDayJS.$H;\r\n        const date = \r\n        `${newHour}:${dateDayJS.$m.toString().length === 1 ? `0${dateDayJS.$m}` : dateDayJS.$m} ${dateDayJS.$D}/${dateDayJS.$W}/${dateDayJS.$y}`;\r\n\r\n        socket.emit('send-private-message', [{message, date}, {uid: selectedUser.uid, name: selectedUser.name}]);\r\n    }, [selectedUser?.uid, selectedUser?.name, socket]);\r\n\r\n    useEffect(() => {\r\n        if(socket) return;\r\n        const newSocket = io('http://localhost:5000', {\r\n        query: { uid, name }\r\n        })\r\n        setSocket(newSocket)\r\n        \r\n      return () => newSocket.close()\r\n    }, [uid, name, socket]);\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n        socket.on('receive-messages', (payload) => {\r\n            dispatch( addMessages(payload) )\r\n        })\r\n\r\n        return () => socket.off('receive-messages')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('created-message', (payload) => {\r\n            dispatch( addMessages(payload) )\r\n        })\r\n\r\n        return () => socket.off('created-message')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('active-users', (payload) => {\r\n            dispatch( addUsers(payload) );\r\n        })\r\n\r\n        return () => socket.off('active-users')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n        \r\n        socket.on('private-messages', (payload) => {\r\n            dispatch( addChatMessages(payload) )\r\n        })\r\n\r\n        return () => socket.off('private-messages')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n       if(!socket) return;\r\n\r\n       socket.on('registered-users', (payload) => {\r\n            dispatch( addAllUsers(payload) )\r\n       })\r\n       return () => socket.off('registered-users')\r\n    }, [socket, dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const newSocket = io('http://localhost:5000', {\r\n        query: { uid, name }\r\n        })\r\n        setSocket(newSocket)\r\n  \r\n        return () => newSocket.close();\r\n      }, [uid, name]);\r\n  \r\n      useEffect(() => {\r\n        if(!socket) return;\r\n  \r\n        socket.on('get-stats', (payload) => {\r\n            dispatch( setStats(payload) )\r\n        })\r\n  \r\n        return () => socket.off('get-stats')\r\n    }, [socket, dispatch]); \r\n\r\n\r\n    const values = {\r\n        sendMessage,\r\n        sendPrivateMessage\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={values}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setStats = (payload) => ({\r\n    type: types.loadStats,\r\n    payload\r\n})","import React, { useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Aside } from './Aside';\r\nimport { Chat } from './Chat';\r\nimport { addMessages, selectUser } from '../../actions/dashboard';\r\nimport { PrivateChat } from './PrivateChat';\r\nimport { useSocket } from '../../context/SocketProvider';\r\nimport axios from 'axios';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nexport const DashboardScreen = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const { selectedUser, messages } = useSelector(state => state.dashboard);\r\n    const {sendMessage, sendPrivateMessage} = useSocket();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n       if(messages.length === 0) {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/messages/get-all`, {\r\n            headers: {\r\n                'x-token': localStorage.getItem('chat-token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then( ( {data} ) => dispatch( addMessages(data.messages) ))\r\n       }\r\n\r\n    }, [dispatch, messages]);\r\n\r\n    \r\n    return (  \r\n        <>\r\n            <Helmet>\r\n                <title>{ name } | ChatRoom</title>\r\n                <meta name=\"description\" content=\"Contenido principal del usuario y salas de chat\" />\r\n            </Helmet>\r\n            \r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={4} style={{ background: '#262D31' }} className=\"p-0\">\r\n                        <Aside />\r\n                    </Col>\r\n                    <Col md={8} className=\"p-0 d-flex\">\r\n                        <div className=\"d-flex\" style={{ height: '100vh', width: '100%'}}>\r\n                            {selectedUser?.uid && selectUser?.name \r\n                            ? <PrivateChat sendPrivateMessage={sendPrivateMessage} />\r\n                            : <Chat sendMessage={sendMessage} />\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { BsFillCaretLeftFill } from 'react-icons/bs';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nexport const StatisticsScreen = () => {\r\n\r\n    const {countMessages} = useSelector(state => state.stats)\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Stats</title>\r\n                <meta name=\"description\" content=\"Estadisticas del chat general\" />\r\n            </Helmet>\r\n\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={12} style={{ background: '#333A41' }} className=\"p-0\">\r\n                        <div style={{ height: '100vh' }}>\r\n                            <div className=\"px-3 py-2\" style={{ background: '#2A2F32'  }}>\r\n                                <Link to=\"/\" className=\"btn btn-outline-info fw-bold d-flex align-items-center d-inline-flex\">\r\n                                <BsFillCaretLeftFill />Inicio\r\n                                </Link>\r\n                            </div>\r\n                            <h3 className=\"text-white text-center mt-5\">Usuarios que más mensajes han enviado</h3>\r\n                            <h4 className=\"text-info text-center\">En el chat general</h4>\r\n                            <ResponsiveContainer width=\"100%\" height=\"60%\" className=\"mt-5\">\r\n                                <BarChart\r\n                                    width={500}\r\n                                    height={300}\r\n                                    data={countMessages}\r\n                                    margin={{\r\n                                        top: 5,\r\n                                        right: 30,\r\n                                        left: 20,\r\n                                        bottom: 5,\r\n                                    }}\r\n                                >\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis />\r\n                                    <Tooltip />\r\n                                    <Legend />\r\n                                    <Bar dataKey=\"messages\" fill=\"#8884d8\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { startLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const [error, setError] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n\r\n        const validation = /^(([^<>()[\\].,;:\\s@”]+(\\.[^<>()[\\].,;:\\s@”]+)*)|(”.+”))@(([^<>()[\\].,;:\\s@”]+\\.)+[^<>()[\\].,;:\\s@”]{2,})$/;\r\n        \r\n        if (validation.test(email) && password.length >= 8) {\r\n\r\n            dispatch( startLogin(email, password) );\r\n            emailRef.current.value = '';\r\n            passwordRef.current.value = '';\r\n\r\n        } else if (email.length === 0 || password.length < 6) {\r\n            setError(true);\r\n        } else {\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Chat | Login</title>\r\n                <meta name=\"description\" content=\"Inicio de sesión\" />\r\n            </Helmet>\r\n\r\n            <Container fluid className=\"bg-dark d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n                <div style={{ width: '300px' }}>\r\n                    <Form onSubmit={handleSubmit} className=\"animate__animated animate__fadeIn\">\r\n                        <h2 className=\"text-white text-start mb-3 texto\">ChatRoom</h2>\r\n                        <h4 className=\"text-white lead\">Inicio de sesión</h4>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control className=\"bg-dark text-white\" type=\"email\" placeholder=\"Correo\" ref={emailRef} isInvalid={error}/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control className=\"bg-dark text-white\" type=\"password\" placeholder=\"Contraseña\" ref={passwordRef} isInvalid={error}/>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"outline-primary\" className=\"w-100 mt-3\">\r\n                            Ingresar\r\n                        </Button>\r\n                        <Link to=\"/auth/register\" className=\"d-inline-block mt-3\">Si no tienes una cuenta</Link>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import { MdDone } from 'react-icons/md';\r\n// import { motion } from 'framer-motion';\r\nimport { startRegister } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const nameRef = useRef();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const [error, setError] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n        const name = nameRef.current.value;\r\n\r\n        const validation = /^(([^<>()[\\].,;:\\s@”]+(\\.[^<>()[\\].,;:\\s@”]+)*)|(”.+”))@(([^<>()[\\].,;:\\s@”]+\\.)+[^<>()[\\].,;:\\s@”]{2,})$/;\r\n        \r\n        if (validation.test(email) && password.length >= 8 && name.length > 0) {\r\n            \r\n            dispatch( startRegister(name, email, password) );\r\n            nameRef.current.value = '';\r\n            emailRef.current.value = '';\r\n            passwordRef.current.value = '';\r\n\r\n        } else if (email.length === 0 || password.length < 6 || name.length === 0) {\r\n            setError(true);\r\n        } else {\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Chat | Register</title>\r\n                <meta name=\"description\" content=\"Registro de nuevo usuario\" />\r\n            </Helmet>\r\n\r\n            <Container fluid className=\"bg-dark d-flex flex-column justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n                \r\n                <div style={{ width: '300px' }}>\r\n                    <Form onSubmit={handleSubmit} className=\"animate__animated animate__fadeIn\">\r\n                        <h2 className=\"text-white text-start mb-3 texto\">ChatRoom</h2>\r\n                        {/* <motion.div \r\n                            animate={{\r\n                                scale: [1, 1.1, 1.1, 1],\r\n                                rotate: [0, 360, 0],\r\n                                borderRadius: [\"15px\", \"50%\", \"40%\", \"50%px\"]\r\n                            }}\r\n                            className=\"px-3 py-3 d-flex align-items-center justify-content-center animate__animated animate__\" style={{ height: '60px', width: '60px', border: '2px solid #4AC95D', color: '#4AC95D', margin: '0 auto'}}\r\n                        >\r\n                            <MdDone size=\"30px\"/>\r\n                        </motion.div> */}\r\n                        <h4 className=\"text-white lead mt-3\">Registro</h4>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control className=\"bg-dark text-white\" type=\"text\" placeholder=\"Nombre\" ref={nameRef} isInvalid={error}/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control className=\"bg-dark text-white\" type=\"email\" placeholder=\"Correo\" ref={emailRef} isInvalid={error}/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control className=\"bg-dark text-white\" type=\"password\" placeholder=\"Contraseña\" ref={passwordRef} isInvalid={error}/>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"outline-primary\" className=\"w-100 mt-3\">\r\n                            Registrarme\r\n                        </Button>\r\n                        <Link to=\"/auth/login\" className=\"d-inline-block mt-3\">Si ya tienes una cuenta</Link>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect,} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n\r\n                <Route \r\n                    path=\"/auth/login\"\r\n                    component={LoginScreen}\r\n                />\r\n\r\n                <Route \r\n                    path=\"/auth/register\"\r\n                    component={RegisterScreen}\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { DashboardScreen } from '../components/dashboard/DashboardScreen';\r\nimport { StatisticsScreen } from '../components/statistics/StatisticsScreen';\r\nimport { SocketProvider } from '../context/SocketProvider';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    //se verifica el token cada vez que se renderiza de nuevo el AppRouter\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch]);\r\n\r\n    if( checking ) {\r\n        return(\r\n            <div className=\"flexible\">\r\n                <div className=\"sk-chase\">\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SocketProvider>\r\n             <Router>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        isAuthenticated={!!uid}\r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        isAuthenticated={!!uid}\r\n                        exact\r\n                        path=\"/\" \r\n                        component={ DashboardScreen }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        isAuthenticated={!!uid}\r\n                        path=\"/stats\"\r\n                        component={ StatisticsScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </Router>\r\n        </SocketProvider>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    newUser: false\r\n}\r\n\r\nexport const authReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }    \r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n            \r\n        case types.authCheckingJWTFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.newUser: \r\n            return {\r\n                ...state,\r\n                newUser: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    users: [],\r\n    selectedUser: {},\r\n    chatMessages: [],\r\n    allUsers: [],\r\n}\r\n\r\nexport const dashboardReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.addMessages:\r\n            return {\r\n                ...state,\r\n                messages: action.payload\r\n            }\r\n        case types.addUsers:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case types.cleanDashboard: \r\n            return {\r\n                messages: [],\r\n                users: []\r\n            }\r\n        case types.selectUser: \r\n            return {\r\n                ...state,\r\n                selectedUser: action.payload\r\n            }\r\n        case types.addChatMessages: \r\n            return {\r\n                ...state,\r\n                chatMessages: action.payload\r\n            }\r\n        case types.addAllUsers: \r\n            return {\r\n                ...state,\r\n                allUsers: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    countMessages: []\r\n}\r\n\r\nexport const statsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.loadStats:\r\n            return {\r\n                ...state,\r\n                countMessages: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { dashboardReducer } from '../reducers/dashboardReducer';\r\nimport { statsReducer } from '../reducers/statsReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    dashboard: dashboardReducer,\r\n    stats: statsReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers( applyMiddleware(thunk) )\r\n)","import { AppRouter } from './router/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './css/app.css'\nimport 'animate.css';\n\nfunction App() {\n\n  return(\n    <Provider store={ store }>\n      <AppRouter />    \n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/js/dist/dropdown';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}