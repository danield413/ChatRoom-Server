{"version":3,"sources":["contexts/SocketProvider.js","components/Aside.js","components/MessageReceived.js","components/MessageSent.js","components/Chat.js","components/Dashboard.js","components/Login.js","contexts/ConversationProvider.js","App.js","index.js"],"names":["SocketContext","React","createContext","useSocket","useContext","SocketProvider","id","name","children","useState","socket","setSocket","messages","setMessages","users","setUsers","useEffect","newSocket","io","query","close","on","payload","off","value","sendMessage","message","emit","from","fromName","listUsers","map","user","join","Provider","Aside","idLogout","className","style","height","color","size","marginRight","DropdownButton","title","Dropdown","ItemText","Item","as","onClick","Button","variant","fontSize","MessageReceived","text","paddingLeft","paddingRight","background","marginLeft","MessageSent","Chat","textRef","useRef","setRef","useCallback","node","scrollIntoView","smooth","index","lastMessage","length","ref","width","padding","onSubmit","e","preventDefault","current","type","placeholder","autoComplete","Dashboard","Container","fluid","Row","Col","md","Login","idSubmit","nameRef","error","setError","Form","uid","uuidv4","Group","Control","isInvalid","ConversationContext","ConversationProvider","App","data","setData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd6d165e.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext)\r\n}\r\n\r\n\r\nexport const SocketProvider = ({ id, name, children }) => {\r\n\r\n    const [socket, setSocket] = useState();\r\n    const [messages, setMessages] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const sendMessage = ( message, name ) => {\r\n        socket.emit('send-message',{message, from: id, fromName: name})\r\n    }\r\n\r\n    const listUsers = () => {\r\n        const list = users.map( user => (\r\n            user.name\r\n        ))\r\n        return list.join(', ');\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const newSocket = io('http://localhost:5000', {\r\n        query: { id, name }\r\n        })\r\n        setSocket(newSocket)\r\n\r\n      return () => newSocket.close()\r\n    }, [id, name])\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('receive-messages', (payload) => {\r\n            setMessages(payload)\r\n        })\r\n\r\n        return () => socket.off('receive-messages')\r\n    }, [socket, setMessages])\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('created-message', (payload) => {\r\n            setMessages(payload)\r\n        })\r\n\r\n        return () => socket.off('created-message')\r\n    }, [socket, setMessages])\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('active-users', (payload) => {\r\n            setUsers(payload)\r\n        })\r\n\r\n        return () => socket.off('active-users')\r\n    }, [socket, setUsers]);\r\n    \r\n    const value = {\r\n        socket,\r\n        sendMessage,\r\n        messages,\r\n        users,\r\n        listUsers\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={ value }>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { useSocket } from '../contexts/SocketProvider'\r\nimport { FaUserCircle } from 'react-icons/fa'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\n\r\nexport const Aside = ({id, name, idLogout}) => {\r\n\r\n    const { users } = useSocket()\r\n    \r\n    const handleLogout = () => {\r\n        idLogout(null)\r\n    }\r\n\r\n    return (\r\n        <aside className=\"h-100 py-2 \">\r\n            <div className=\"w-100 bg-primary rounded d-flex justify-content-between align-items-center px-2\" style={{ height: '40px' }}>\r\n                <div>\r\n                    <FaUserCircle color=\"#fff\" size=\"26px\" style={{ marginRight: '10px' }} />\r\n                    <span className=\"fw-bold\">{name}</span>\r\n                </div>\r\n                <DropdownButton title={<AiTwotoneSetting />} id=\"dropdown-item-button\">\r\n                    <Dropdown.ItemText><strong>Opciones</strong></Dropdown.ItemText>\r\n                    <Dropdown.Item as=\"button\" onClick={handleLogout}>Salir</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n            <p className=\"text-muted text-center mt-2\">{id}</p>\r\n            <h5><strong className=\"text-white\">Conectados en la sala</strong></h5>\r\n                {users &&\r\n                users.map(user => (\r\n                    <Button key={user.id} className=\"text-white my-2 w-100 text-start animate__animated animate animate__bounceIn\" variant=\"outline-primary\">\r\n                        <i className=\"fas fa-circle mx-2\" style={{fontSize: '12px', color: '#1DD200'}}></i>\r\n                        <span>{user.name}</span>\r\n                    </Button>\r\n                ))\r\n                } \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const MessageReceived = ({text, name}) => {\r\n    return (\r\n        <div className=\"px-3 py-1 rounded text-white mb-3 animate__animated animate__bounceIn\" style={{ paddingLeft: '10px', paddingRight: '20px', background: '#262D31', marginLeft: '60px'}}>\r\n            <div className=\"lead fw-bold\" style={{ fontSize: '14px'}}>{name}</div>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const MessageSent = ({text}) => {\r\n    return (\r\n        <div className=\"px-3 py-1 rounded bg-primary text-white mb-3 animate__animated animate__bounceIn\" style={{  marginRight: '60px' }}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useRef } from 'react'\r\nimport { IoMdSend } from 'react-icons/io'\r\nimport { useSocket } from '../contexts/SocketProvider';\r\nimport { MessageReceived } from './MessageReceived';\r\nimport { MessageSent } from './MessageSent';\r\n\r\nexport const Chat = ({ id, name }) => {\r\n\r\n    const textRef = useRef();\r\n    const { messages, sendMessage } = useSocket();\r\n    // const listHeader = listUsers();\r\n    const setRef = useCallback( node => {\r\n        if( node ) {\r\n            node.scrollIntoView({ smooth: true })\r\n        }\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(textRef.current.value === ''){\r\n            textRef.current.value = '';\r\n        } else {\r\n            sendMessage(textRef.current.value, name);\r\n            textRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat w-100\">\r\n            \r\n            <div className=\"chat-messages bg-dark overflow-auto\">\r\n                {messages &&\r\n                            messages.map((message, index) => {\r\n                                const lastMessage = messages.length - 1 === index;\r\n                                if(message.from === id){\r\n                                    return <div className=\"d-flex w-100 align-items-end flex-column\" ref={lastMessage ? setRef : null}>\r\n                                        <MessageSent key={index} text={message.message}/>\r\n                                    </div>\r\n                                } else {\r\n                                    return <div className=\"d-flex w-100 align-items-start flex-column\" ref={lastMessage ? setRef : null}>\r\n                                        <MessageReceived key={index} text={message.message} name={message.fromName}/>\r\n                                    </div>\r\n                                }\r\n                            })\r\n                }\r\n            </div>\r\n           \r\n            <div id=\"chat-input\" style={{ height: '100%', width: '100%', padding: '0 150px', background: '#2A2F32' }}>\r\n                <form onSubmit={handleSubmit} className=\"h-100 d-flex align-items-center\">\r\n                    <input ref={textRef} type=\"text\" className=\"w-100\" id=\"message-input\" placeholder=\"Escribe un mensaje\" autoComplete=\"off\"/>\r\n                    <button type=\"submit\" id=\"message-submit\" className=\"bg-primary\"><IoMdSend color=\"#fff\"/></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { SocketProvider } from '../contexts/SocketProvider'\r\nimport { Aside } from './Aside'\r\nimport { Chat } from './Chat'\r\n\r\nexport const Dashboard = ({ id , name, idLogout}) => {\r\n    return (\r\n        <SocketProvider id={id} name={name}>\r\n            <Container fluid style={{ height: '100vh', width: '100%'}}>\r\n                <Row style={{ height: '100%' }}>\r\n                    <Col md={3} style={{ background: '#262D31' }} className=\"border-end\">\r\n                        <Aside name={name} idLogout={idLogout} id={id}/>\r\n                    </Col>\r\n                    <Col md={9} className=\"p-0\">\r\n                        <div className=\"d-flex\" style={{ height: '100vh', width: '100%'}}>\r\n                            <Chat name={name} id={id}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </SocketProvider>\r\n        \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport { Button, Container, Form } from 'react-bootstrap'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport const Login = ({ idSubmit }) => {\r\n\r\n    const nameRef = useRef();\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( nameRef.current.value.length === 0 || nameRef.current.value.length < 4 ) {\r\n            setError(true);\r\n            return;\r\n        } else {\r\n            setError(false);\r\n            const uid = uuidv4();\r\n            idSubmit({ uid, name: nameRef.current.value });\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"bg-dark d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n            <div style={{ width: '300px' }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <h2 className=\"text-white text-center mb-5\">Chat Room</h2>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"Nombre\" ref={nameRef} isInvalid={error}/>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"outline-primary\" className=\"w-100 mt-3\">\r\n                        Ingresar\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n// import { useSocket } from './SocketProvider';\r\n\r\nconst ConversationContext = React.createContext();\r\n\r\nexport const useConversation = () => {\r\n    return useContext(ConversationContext)\r\n}\r\n\r\nexport const ConversationProvider = ({ id = null, name = null, children }) => {\r\n\r\n    const values = {\r\n        \r\n    }\r\n\r\n    return (\r\n        <ConversationContext.Provider value={ values }>\r\n            { children }\r\n        </ConversationContext.Provider>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Login } from \"./components/Login\";\nimport { ConversationProvider } from \"./contexts/ConversationProvider\";\nimport './css/app.css'\nimport 'animate.css';\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n\n  return(\n    <ConversationProvider id={data?.uid} name={data?.name}>\n        {data !== null\n        ? <Dashboard id={data?.uid} name={data?.name} idLogout={setData}/>\n        : <Login idSubmit={setData}/>\n        }\n    </ConversationProvider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}